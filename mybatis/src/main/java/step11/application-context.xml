<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

       <!-- 에노테이션으로 의존객체 주입하기
        @Componet 객체 자동생성
        <context:annotation-config/>는 자동으로 내장되어 있으니 굳이 선언할 필요는 없다.
       -->
       
       <!-- base-pakage는 어느 패키지에 있는 @Component를 처리할 지 설정하는 것이다.-->
       <context:component-scan base-package="step11"/>
       
      <!-- SqlSessionFactory 객체를 준비한다. -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
         
            
            <!-- mybatis에서 제공해주는 클래스를 사용할때는 스프링에서 제공하는 DataSource를 사용해야한다.-->
            <property name="dataSource" ref="dataSource" />
            <!-- 맵퍼 파일의 위치를 여기에서 지정할 수 있다. -->
            <property name="mapperLocations" value="classpath*:step11/*Mapper.xml" />
            <property name="typeAliasesPackage" value="step11"></property>
        </bean>
        
        <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		    <property name="driverClassName" value="${jdbc.driverClassName}" />
		    <property name="url" value="${jdbc.url}" />
		    <property name="username" value="${jdbc.username}" />
		    <property name="password" value="${jdbc.password}" />
		</bean> 
        
        <!-- 지정한 .properties 파일을 읽어서 메모리에 값을 준비해주는 도우미 객체를 등록한다. -->   
        <context:property-placeholder location="step11/jdbc.properties"/>
        
</beans>